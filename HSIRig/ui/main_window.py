# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

#TODO: These imports for the logic requirements should be moved out of this file

# --- imports you need in your MainWindow module ---
#from PyQt6 import QtWidgets, QtCore
import ctypes as C
import numpy as np
from queue import Queue, Empty

# Matplotlib canvas for Qt (works with PyQt5/6)
try:
    from matplotlib.backends.backend_qtagg import FigureCanvasQTAgg as FigureCanvas
except ImportError:
    from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
# --- imports you need in your MainWindow module ---
from PyQt5 import QtWidgets, QtCore
import ctypes as C
import numpy as np
from queue import Queue, Empty

# Matplotlib canvas for Qt (works with PyQt5/6)
try:
    from matplotlib.backends.backend_qtagg import FigureCanvasQTAgg as FigureCanvas
except ImportError:
    from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure

from SpecSensor import SpecSensor


from SpecSensor import SpecSensor

WIDTH = 1024
BAND_IDXS = np.array([15, 60, 90], dtype=int)  # R,G,B (0-based)
ROLLING_HEIGHT = 512
QUEUE_MAX = 4096


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(1588, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(40, 22, 1521, 821))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.groupBox = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox.setGeometry(QtCore.QRect(30, 0, 421, 181))
        self.groupBox.setObjectName("groupBox")
        self.comboBox = QtWidgets.QComboBox(self.groupBox)
        self.comboBox.setGeometry(QtCore.QRect(150, 30, 221, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(50, 30, 71, 16))
        self.label.setObjectName("label")
        self.btnCameraConnect = QtWidgets.QPushButton(self.groupBox)
        self.btnCameraConnect.setGeometry(QtCore.QRect(150, 60, 111, 32))
        self.btnCameraConnect.setObjectName("btnCameraConnect")
        self.btnCameraDisconnect = QtWidgets.QPushButton(self.groupBox)
        self.btnCameraDisconnect.setGeometry(QtCore.QRect(270, 60, 101, 32))
        self.btnCameraDisconnect.setObjectName("btnCameraDisconnect")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(50, 100, 81, 16))
        self.label_2.setObjectName("label_2")
        self.txtOutputFolderPath = QtWidgets.QLineEdit(self.groupBox)
        self.txtOutputFolderPath.setGeometry(QtCore.QRect(150, 100, 191, 22))
        self.txtOutputFolderPath.setObjectName("txtOutputFolderPath")
        self.btnOutputFolder = QtWidgets.QPushButton(self.groupBox)
        self.btnOutputFolder.setGeometry(QtCore.QRect(340, 100, 31, 24))
        self.btnOutputFolder.setObjectName("btnOutputFolder")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_2.setGeometry(QtCore.QRect(30, 180, 421, 211))
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        self.label_3.setGeometry(QtCore.QRect(60, 20, 71, 20))
        self.label_3.setObjectName("label_3")
        self.textEditFrameRate = QtWidgets.QTextEdit(self.groupBox_2)
        self.textEditFrameRate.setGeometry(QtCore.QRect(150, 50, 211, 21))
        self.textEditFrameRate.setObjectName("textEditFrameRate")
        self.textEditExposure = QtWidgets.QTextEdit(self.groupBox_2)
        self.textEditExposure.setGeometry(QtCore.QRect(150, 80, 211, 21))
        self.textEditExposure.setObjectName("textEditExposure")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setGeometry(QtCore.QRect(60, 50, 71, 20))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox_2)
        self.label_5.setGeometry(QtCore.QRect(60, 80, 71, 20))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.groupBox_2)
        self.label_6.setGeometry(QtCore.QRect(60, 110, 91, 20))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox_2)
        self.label_7.setGeometry(QtCore.QRect(60, 140, 91, 20))
        self.label_7.setObjectName("label_7")
        self.cmbSpectralBin = QtWidgets.QComboBox(self.groupBox_2)
        self.cmbSpectralBin.setGeometry(QtCore.QRect(150, 110, 211, 22))
        self.cmbSpectralBin.setObjectName("cmbSpectralBin")
        self.cmbSpectralBin.addItem("")
        self.cmbSpectralBin.addItem("")
        self.cmbSpectralBin.addItem("")
        self.cmbSpatialBin = QtWidgets.QComboBox(self.groupBox_2)
        self.cmbSpatialBin.setGeometry(QtCore.QRect(150, 140, 211, 22))
        self.cmbSpatialBin.setObjectName("cmbSpatialBin")
        self.cmbSpatialBin.addItem("")
        self.cmbSpatialBin.addItem("")
        self.cmbSpatialBin.addItem("")
        self.cmbSpatialBin.addItem("")
        self.btnApplyAdjust = QtWidgets.QPushButton(self.groupBox_2)
        self.btnApplyAdjust.setGeometry(QtCore.QRect(150, 170, 201, 31))
        self.btnApplyAdjust.setObjectName("btnApplyAdjust")
        self.cmbShutter = QtWidgets.QComboBox(self.groupBox_2)
        self.cmbShutter.setGeometry(QtCore.QRect(150, 20, 211, 22))
        self.cmbShutter.setObjectName("cmbShutter")
        self.cmbShutter.addItem("")
        self.cmbShutter.addItem("")
        self.groupBoxAquire = QtWidgets.QGroupBox(self.tab_2)
        self.groupBoxAquire.setGeometry(QtCore.QRect(30, 390, 421, 161))
        self.groupBoxAquire.setObjectName("groupBoxAquire")
        self.btnStartAcquire = QtWidgets.QPushButton(self.groupBoxAquire)
        self.btnStartAcquire.setGeometry(QtCore.QRect(150, 20, 71, 61))
        self.btnStartAcquire.setObjectName("btnStartAcquire")
        self.label_8 = QtWidgets.QLabel(self.groupBoxAquire)
        self.label_8.setGeometry(QtCore.QRect(70, 40, 71, 20))
        self.label_8.setObjectName("label_8")
        self.textEditFrameCount = QtWidgets.QTextEdit(self.groupBoxAquire)
        self.textEditFrameCount.setGeometry(QtCore.QRect(150, 120, 211, 21))
        self.textEditFrameCount.setObjectName("textEditFrameCount")
        self.label_10 = QtWidgets.QLabel(self.groupBoxAquire)
        self.label_10.setGeometry(QtCore.QRect(60, 120, 71, 20))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.groupBoxAquire)
        self.label_11.setGeometry(QtCore.QRect(60, 90, 91, 20))
        self.label_11.setObjectName("label_11")
        self.cmbCaptureMode = QtWidgets.QComboBox(self.groupBoxAquire)
        self.cmbCaptureMode.setGeometry(QtCore.QRect(150, 90, 211, 22))
        self.cmbCaptureMode.setObjectName("cmbCaptureMode")
        self.cmbCaptureMode.addItem("")
        self.cmbCaptureMode.addItem("")
        self.cmbCaptureMode.addItem("")
        self.btnStopAcquire = QtWidgets.QPushButton(self.groupBoxAquire)
        self.btnStopAcquire.setGeometry(QtCore.QRect(230, 20, 71, 61))
        self.btnStopAcquire.setObjectName("btnStopAcquire")
        self.statusGroupBox_2 = QtWidgets.QGroupBox(self.tab_2)
        self.statusGroupBox_2.setGeometry(QtCore.QRect(20, 550, 1131, 200))
        self.statusGroupBox_2.setObjectName("statusGroupBox_2")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.statusGroupBox_2)
        self.verticalLayout_7.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout_7.setSpacing(10)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setSpacing(10)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.status_label = QtWidgets.QLabel(self.statusGroupBox_2)
        self.status_label.setObjectName("status_label")
        self.horizontalLayout_3.addWidget(self.status_label)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.bed_status_label = QtWidgets.QLabel(self.statusGroupBox_2)
        self.bed_status_label.setObjectName("bed_status_label")
        self.verticalLayout_8.addWidget(self.bed_status_label)
        self.bed_position_label = QtWidgets.QLabel(self.statusGroupBox_2)
        self.bed_position_label.setObjectName("bed_position_label")
        self.verticalLayout_8.addWidget(self.bed_position_label)
        self.horizontalLayout_3.addLayout(self.verticalLayout_8)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.carriage_status_label = QtWidgets.QLabel(self.statusGroupBox_2)
        self.carriage_status_label.setObjectName("carriage_status_label")
        self.verticalLayout_9.addWidget(self.carriage_status_label)
        self.carriage_position_label = QtWidgets.QLabel(self.statusGroupBox_2)
        self.carriage_position_label.setObjectName("carriage_position_label")
        self.verticalLayout_9.addWidget(self.carriage_position_label)
        self.horizontalLayout_3.addLayout(self.verticalLayout_9)
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.target_position_label = QtWidgets.QLabel(self.statusGroupBox_2)
        self.target_position_label.setObjectName("target_position_label")
        self.verticalLayout_10.addWidget(self.target_position_label)
        self.completion_percentage_label = QtWidgets.QLabel(self.statusGroupBox_2)
        self.completion_percentage_label.setObjectName("completion_percentage_label")
        self.verticalLayout_10.addWidget(self.completion_percentage_label)
        self.horizontalLayout_3.addLayout(self.verticalLayout_10)
        self.verticalLayout_7.addLayout(self.horizontalLayout_3)
        self.cameraFeedGroupBox = QtWidgets.QGroupBox(self.tab_2)
        self.cameraFeedGroupBox.setGeometry(QtCore.QRect(470, 0, 900, 541))
        self.cameraFeedGroupBox.setObjectName("cameraFeedGroupBox")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.cameraFeedGroupBox)
        self.horizontalLayout_2.setContentsMargins(10, 10, 10, 10)
        self.horizontalLayout_2.setSpacing(10)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.camera_feed = QtWidgets.QLabel(self.cameraFeedGroupBox)
        self.camera_feed.setObjectName("camera_feed")
        self.horizontalLayout_2.addWidget(self.camera_feed)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.groupBoxRigControl = QtWidgets.QGroupBox(self.tab_3)
        self.groupBoxRigControl.setGeometry(QtCore.QRect(500, 50, 231, 371))
        self.groupBoxRigControl.setObjectName("groupBoxRigControl")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.groupBoxRigControl)
        self.verticalLayout_11.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout_11.setSpacing(10)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.btnHomeBed = QtWidgets.QPushButton(self.groupBoxRigControl)
        self.btnHomeBed.setMinimumSize(QtCore.QSize(0, 32))
        self.btnHomeBed.setObjectName("btnHomeBed")
        self.verticalLayout_11.addWidget(self.btnHomeBed)
        self.btnHomeCarriage = QtWidgets.QPushButton(self.groupBoxRigControl)
        self.btnHomeCarriage.setMinimumSize(QtCore.QSize(0, 32))
        self.btnHomeCarriage.setObjectName("btnHomeCarriage")
        self.verticalLayout_11.addWidget(self.btnHomeCarriage)
        self.btnWhiteStrip = QtWidgets.QPushButton(self.groupBoxRigControl)
        self.btnWhiteStrip.setMinimumSize(QtCore.QSize(0, 32))
        self.btnWhiteStrip.setObjectName("btnWhiteStrip")
        self.verticalLayout_11.addWidget(self.btnWhiteStrip)
        self.btnBlackStrip = QtWidgets.QPushButton(self.groupBoxRigControl)
        self.btnBlackStrip.setMinimumSize(QtCore.QSize(0, 32))
        self.btnBlackStrip.setObjectName("btnBlackStrip")
        self.verticalLayout_11.addWidget(self.btnBlackStrip)
        self.btnScan = QtWidgets.QPushButton(self.groupBoxRigControl)
        self.btnScan.setMinimumSize(QtCore.QSize(0, 32))
        self.btnScan.setObjectName("btnScan")
        self.verticalLayout_11.addWidget(self.btnScan)
        self.btnStop = QtWidgets.QPushButton(self.groupBoxRigControl)
        self.btnStop.setMinimumSize(QtCore.QSize(0, 32))
        self.btnStop.setObjectName("btnStop")
        self.verticalLayout_11.addWidget(self.btnStop)
        self.btnReset = QtWidgets.QPushButton(self.groupBoxRigControl)
        self.btnReset.setMinimumSize(QtCore.QSize(0, 32))
        self.btnReset.setObjectName("btnReset")
        self.verticalLayout_11.addWidget(self.btnReset)
        self.groupBoxScanParam = QtWidgets.QGroupBox(self.tab_3)
        self.groupBoxScanParam.setGeometry(QtCore.QRect(20, 190, 441, 261))
        self.groupBoxScanParam.setObjectName("groupBoxScanParam")
        self.lblScanSpeed = QtWidgets.QLabel(self.groupBoxScanParam)
        self.lblScanSpeed.setGeometry(QtCore.QRect(0, 60, 181, 20))
        self.lblScanSpeed.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblScanSpeed.setObjectName("lblScanSpeed")
        self.lblBedEnd = QtWidgets.QLabel(self.groupBoxScanParam)
        self.lblBedEnd.setGeometry(QtCore.QRect(0, 160, 181, 20))
        self.lblBedEnd.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblBedEnd.setObjectName("lblBedEnd")
        self.txtBedEndPosition = QtWidgets.QLineEdit(self.groupBoxScanParam)
        self.txtBedEndPosition.setGeometry(QtCore.QRect(200, 160, 221, 22))
        self.txtBedEndPosition.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.txtBedEndPosition.setObjectName("txtBedEndPosition")
        self.txtSpeed = QtWidgets.QLineEdit(self.groupBoxScanParam)
        self.txtSpeed.setGeometry(QtCore.QRect(200, 60, 221, 22))
        self.txtSpeed.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.txtSpeed.setText("")
        self.txtSpeed.setObjectName("txtSpeed")
        self.txtBedStartPosition = QtWidgets.QLineEdit(self.groupBoxScanParam)
        self.txtBedStartPosition.setGeometry(QtCore.QRect(200, 130, 221, 22))
        self.txtBedStartPosition.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.txtBedStartPosition.setObjectName("txtBedStartPosition")
        self.lblBedStart = QtWidgets.QLabel(self.groupBoxScanParam)
        self.lblBedStart.setGeometry(QtCore.QRect(0, 130, 181, 20))
        self.lblBedStart.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblBedStart.setObjectName("lblBedStart")
        self.lblCameraPosition = QtWidgets.QLabel(self.groupBoxScanParam)
        self.lblCameraPosition.setGeometry(QtCore.QRect(0, 190, 181, 20))
        self.lblCameraPosition.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblCameraPosition.setObjectName("lblCameraPosition")
        self.txtCameraPosition = QtWidgets.QLineEdit(self.groupBoxScanParam)
        self.txtCameraPosition.setGeometry(QtCore.QRect(200, 190, 221, 22))
        self.txtCameraPosition.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.txtCameraPosition.setObjectName("txtCameraPosition")
        self.lblMotionParam = QtWidgets.QLabel(self.groupBoxScanParam)
        self.lblMotionParam.setGeometry(QtCore.QRect(-3, 30, 371, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.lblMotionParam.setFont(font)
        self.lblMotionParam.setAlignment(QtCore.Qt.AlignCenter)
        self.lblMotionParam.setObjectName("lblMotionParam")
        self.lblBedParam = QtWidgets.QLabel(self.groupBoxScanParam)
        self.lblBedParam.setGeometry(QtCore.QRect(-10, 100, 381, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.lblBedParam.setFont(font)
        self.lblBedParam.setAlignment(QtCore.Qt.AlignCenter)
        self.lblBedParam.setObjectName("lblBedParam")
        self.btnRigUpdateSettings = QtWidgets.QPushButton(self.groupBoxScanParam)
        self.btnRigUpdateSettings.setGeometry(QtCore.QRect(310, 220, 111, 32))
        self.btnRigUpdateSettings.setObjectName("btnRigUpdateSettings")
        self.groupBoxRigConnection = QtWidgets.QGroupBox(self.tab_3)
        self.groupBoxRigConnection.setGeometry(QtCore.QRect(20, 50, 441, 101))
        self.groupBoxRigConnection.setObjectName("groupBoxRigConnection")
        self.lblControlPort = QtWidgets.QLabel(self.groupBoxRigConnection)
        self.lblControlPort.setGeometry(QtCore.QRect(0, 30, 181, 20))
        self.lblControlPort.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblControlPort.setObjectName("lblControlPort")
        self.cmbBoxCommPortSelect = QtWidgets.QComboBox(self.groupBoxRigConnection)
        self.cmbBoxCommPortSelect.setGeometry(QtCore.QRect(200, 30, 221, 24))
        self.cmbBoxCommPortSelect.setObjectName("cmbBoxCommPortSelect")
        self.btnRigConnect = QtWidgets.QPushButton(self.groupBoxRigConnection)
        self.btnRigConnect.setGeometry(QtCore.QRect(200, 60, 111, 32))
        self.btnRigConnect.setObjectName("btnRigConnect")
        self.btnRigDisconnect = QtWidgets.QPushButton(self.groupBoxRigConnection)
        self.btnRigDisconnect.setEnabled(False)
        self.btnRigDisconnect.setGeometry(QtCore.QRect(320, 60, 101, 32))
        self.btnRigDisconnect.setCheckable(False)
        self.btnRigDisconnect.setAutoDefault(False)
        self.btnRigDisconnect.setDefault(False)
        self.btnRigDisconnect.setFlat(False)
        self.btnRigDisconnect.setObjectName("btnRigDisconnect")
        self.line = QtWidgets.QFrame(self.tab_3)
        self.line.setGeometry(QtCore.QRect(470, 30, 16, 731))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.tab_3)
        self.line_2.setGeometry(QtCore.QRect(750, 30, 16, 731))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.tab_3)
        self.line_3.setGeometry(QtCore.QRect(30, 160, 431, 20))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.line_4 = QtWidgets.QFrame(self.tab_3)
        self.line_4.setGeometry(QtCore.QRect(30, 450, 431, 20))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.line_5 = QtWidgets.QFrame(self.tab_3)
        self.line_5.setGeometry(QtCore.QRect(490, 420, 261, 16))
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab_3)
        self.groupBox_3.setGeometry(QtCore.QRect(500, 450, 231, 311))
        self.groupBox_3.setObjectName("groupBox_3")
        self.lblCurrentBedPosition = QtWidgets.QLabel(self.groupBox_3)
        self.lblCurrentBedPosition.setGeometry(QtCore.QRect(0, 62, 151, 16))
        self.lblCurrentBedPosition.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblCurrentBedPosition.setObjectName("lblCurrentBedPosition")
        self.lblCurrentCameraPosition = QtWidgets.QLabel(self.groupBox_3)
        self.lblCurrentCameraPosition.setGeometry(QtCore.QRect(0, 92, 151, 16))
        self.lblCurrentCameraPosition.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblCurrentCameraPosition.setObjectName("lblCurrentCameraPosition")
        self.txtCurrenBedPosition_readonly = QtWidgets.QLineEdit(self.groupBox_3)
        self.txtCurrenBedPosition_readonly.setGeometry(QtCore.QRect(152, 60, 76, 22))
        self.txtCurrenBedPosition_readonly.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.txtCurrenBedPosition_readonly.setReadOnly(True)
        self.txtCurrenBedPosition_readonly.setPlaceholderText("")
        self.txtCurrenBedPosition_readonly.setObjectName("txtCurrenBedPosition_readonly")
        self.txtCurrenCameraPosition_readonly = QtWidgets.QLineEdit(self.groupBox_3)
        self.txtCurrenCameraPosition_readonly.setGeometry(QtCore.QRect(152, 90, 76, 22))
        self.txtCurrenCameraPosition_readonly.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.txtCurrenCameraPosition_readonly.setReadOnly(True)
        self.txtCurrenCameraPosition_readonly.setPlaceholderText("")
        self.txtCurrenCameraPosition_readonly.setObjectName("txtCurrenCameraPosition_readonly")
        self.chkHomeStatus_readonly = QtWidgets.QCheckBox(self.groupBox_3)
        self.chkHomeStatus_readonly.setEnabled(True)
        self.chkHomeStatus_readonly.setGeometry(QtCore.QRect(92, 30, 80, 21))
        self.chkHomeStatus_readonly.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.chkHomeStatus_readonly.setShortcut("")
        self.chkHomeStatus_readonly.setCheckable(False)
        self.chkHomeStatus_readonly.setObjectName("chkHomeStatus_readonly")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1588, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #TODO: Move this logic elsewhere out of the auto generated file
        # --- replace QLabel with Matplotlib canvas ---
        self.rgb_img = np.zeros((ROLLING_HEIGHT, WIDTH, 3), dtype=np.uint8)

        self.canvas = FigureCanvas(Figure(figsize=(6, 3)))
        self.ax = self.canvas.figure.subplots()
        self.ax.axis("off")
        self.im = self.ax.imshow(self.rgb_img, vmin=0, vmax=255,
                                 aspect="auto", interpolation="nearest")

        # swap widgets in the same layout spot
        self.horizontalLayout_2.replaceWidget(self.camera_feed, self.canvas)
        self.camera_feed.deleteLater()

        # queue between SDK callback (producer) and UI (consumer)
        self.line_queue = Queue(maxsize=QUEUE_MAX)

        # stats
        self._lines_rcvd = 0
        self._bands_in_line = None

        # start camera and register callback
        #self._start_sensor_and_callback()

        # UI timer to update plot (main thread only)
        self.timer = QtCore.QTimer(self)
        self.timer.timeout.connect(self._drain_and_update_plot)
        self.timer.start(30)  # ~33 FPS UI
        # --- end of eplace QLabel with Matplotlib canvas ---
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Hyperspectral Scanner"))
        self.groupBox.setTitle(_translate("MainWindow", "Camera"))
        self.comboBox.setItemText(0, _translate("MainWindow", "FX10e"))
        self.label.setText(_translate("MainWindow", "Camera"))
        self.btnCameraConnect.setText(_translate("MainWindow", "Connect"))
        self.btnCameraDisconnect.setText(_translate("MainWindow", "Disconnect"))
        self.label_2.setText(_translate("MainWindow", "Output Folder"))
        self.btnOutputFolder.setText(_translate("MainWindow", "..."))
        self.groupBox_2.setTitle(_translate("MainWindow", "Adjust"))
        self.label_3.setText(_translate("MainWindow", "Shutter"))
        self.label_4.setText(_translate("MainWindow", "Frame Rate"))
        self.label_5.setText(_translate("MainWindow", "Exposure"))
        self.label_6.setText(_translate("MainWindow", "Spectral Binning"))
        self.label_7.setText(_translate("MainWindow", "Spatial Binning"))
        self.cmbSpectralBin.setItemText(0, _translate("MainWindow", "1"))
        self.cmbSpectralBin.setItemText(1, _translate("MainWindow", "2"))
        self.cmbSpectralBin.setItemText(2, _translate("MainWindow", "4"))
        self.cmbSpatialBin.setItemText(0, _translate("MainWindow", "1"))
        self.cmbSpatialBin.setItemText(1, _translate("MainWindow", "2"))
        self.cmbSpatialBin.setItemText(2, _translate("MainWindow", "4"))
        self.cmbSpatialBin.setItemText(3, _translate("MainWindow", "8"))
        self.btnApplyAdjust.setText(_translate("MainWindow", "Apply"))
        self.cmbShutter.setItemText(0, _translate("MainWindow", "Open"))
        self.cmbShutter.setItemText(1, _translate("MainWindow", "Close"))
        self.groupBoxAquire.setTitle(_translate("MainWindow", "Acquisition"))
        self.btnStartAcquire.setText(_translate("MainWindow", "Start"))
        self.label_8.setText(_translate("MainWindow", "Acquire"))
        self.label_10.setText(_translate("MainWindow", "Frame Count"))
        self.label_11.setText(_translate("MainWindow", "Capture Mode"))
        self.cmbCaptureMode.setItemText(0, _translate("MainWindow", "1"))
        self.cmbCaptureMode.setItemText(1, _translate("MainWindow", "2"))
        self.cmbCaptureMode.setItemText(2, _translate("MainWindow", "4"))
        self.btnStopAcquire.setText(_translate("MainWindow", "Stop"))
        self.statusGroupBox_2.setTitle(_translate("MainWindow", "Status"))
        self.status_label.setText(_translate("MainWindow", "Status: Idle"))
        self.bed_status_label.setText(_translate("MainWindow", "Bed Status: Not Homed"))
        self.bed_position_label.setText(_translate("MainWindow", "Bed Position: 0"))
        self.carriage_status_label.setText(_translate("MainWindow", "Carriage Status: Not Homed"))
        self.carriage_position_label.setText(_translate("MainWindow", "Carriage Position: 0"))
        self.target_position_label.setText(_translate("MainWindow", "Target Position: 0"))
        self.completion_percentage_label.setText(_translate("MainWindow", "Completion: 0%"))
        self.cameraFeedGroupBox.setTitle(_translate("MainWindow", "Camera Feed"))
        self.camera_feed.setText(_translate("MainWindow", "Camera Feed"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Connection"))
        self.groupBoxRigControl.setTitle(_translate("MainWindow", "Rig Controls"))
        self.btnHomeBed.setText(_translate("MainWindow", "Home Bed"))
        self.btnHomeCarriage.setText(_translate("MainWindow", "Home Carriage"))
        self.btnWhiteStrip.setText(_translate("MainWindow", "Move to White Calibration Strip"))
        self.btnBlackStrip.setText(_translate("MainWindow", "Move to Black Calibration Strip"))
        self.btnScan.setText(_translate("MainWindow", "Begin Scan"))
        self.btnStop.setText(_translate("MainWindow", "STOP"))
        self.btnReset.setText(_translate("MainWindow", "Reset Controller"))
        self.groupBoxScanParam.setTitle(_translate("MainWindow", "Scan Parameter"))
        self.lblScanSpeed.setText(_translate("MainWindow", "Speed (mm/minute):"))
        self.lblBedEnd.setText(_translate("MainWindow", "Bed End Position (mm):"))
        self.txtBedEndPosition.setPlaceholderText(_translate("MainWindow", "Front of Bed End position (in mm)"))
        self.txtSpeed.setPlaceholderText(_translate("MainWindow", "Move Speed in mm per minute"))
        self.txtBedStartPosition.setPlaceholderText(_translate("MainWindow", "Front of Bed Start position (in mm)"))
        self.lblBedStart.setText(_translate("MainWindow", "Bed Start Position (mm):"))
        self.lblCameraPosition.setText(_translate("MainWindow", "Camera Position (mm):"))
        self.txtCameraPosition.setPlaceholderText(_translate("MainWindow", "Camera height position (in mm)"))
        self.lblMotionParam.setText(_translate("MainWindow", "Motion Parameters"))
        self.lblBedParam.setText(_translate("MainWindow", "Bed Parameters"))
        self.btnRigUpdateSettings.setText(_translate("MainWindow", "Update Settings"))
        self.groupBoxRigConnection.setTitle(_translate("MainWindow", "Rig Controller Connection"))
        self.lblControlPort.setText(_translate("MainWindow", "Controller Port:"))
        self.cmbBoxCommPortSelect.setPlaceholderText(_translate("MainWindow", "Select Rig Controller Comm Port"))
        self.btnRigConnect.setText(_translate("MainWindow", "Connect"))
        self.btnRigDisconnect.setText(_translate("MainWindow", "Disconnect"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Rig Status"))
        self.lblCurrentBedPosition.setText(_translate("MainWindow", "Current Bed Position: "))
        self.lblCurrentCameraPosition.setText(_translate("MainWindow", "Current Camera Position: "))
        self.chkHomeStatus_readonly.setText(_translate("MainWindow", "Homed:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Setup"))


    #TODO: This logic should be moved out of this file
    def _start_sensor_and_callback(self):
        self.specSensor = SpecSensor(sdkFolder='./libs/')
        profiles = self.specSensor.getProfiles()
        if not profiles:
            QtWidgets.QMessageBox.critical(self, "SpecSensor", "No devices found.")
            return

        # open first profile (or pick by name)
        # SELECT CAMERA VIA THE INDEX (FX10e == 15)
        err, _ = self.specSensor.open(profiles[15], autoInit=True)
        if err != 0:
            QtWidgets.QMessageBox.critical(self, "SpecSensor", f"Open failed: {err}")
            return

        # Keep strong reference so it won't be GC’ed
        self._callback_ref = self._onDataCallback
        self.specSensor.sensor.registerDataCallback(self._callback_ref)

        # start acquisition
        #self.specSensor.command('Acquisition.Start')

    def _reshape_line_from_bytes(self, pBuffer, nbytes):
        if nbytes % 2:
            return None, None
        nsamples = nbytes // 2
        u16_ptr = C.cast(pBuffer, C.POINTER(C.c_uint16))
        raw = np.ctypeslib.as_array(u16_ptr, shape=(nsamples,))

        if nsamples % WIDTH != 0:
            return None, None
        bands = nsamples // WIDTH

        # BIL for a single line -> (bands, width).T == (pixels, bands)
        line16 = raw.reshape(bands, WIDTH).T
        return line16, bands

    def _u16_to_u8(self, x16, eps=1e-6):
        # robust 1–99% percentile stretch per channel
        lo = np.percentile(x16, 1, axis=0)
        hi = np.percentile(x16, 99, axis=0)
        y = (x16 - lo) * (255.0 / (hi - lo + eps))
        return np.clip(y, 0, 255).astype(np.uint8)

    # signature matches your SDK: (void*, int64, int64, void*)
    def _onDataCallback(self, pBuffer: C.c_void_p,
                        nFrameSize: C.c_int64,
                        nFrameNumber: C.c_int64,
                        pContext: C.c_void_p) -> None:
        try:
            nbytes = int(nFrameSize)
            if nbytes <= 0:
                return
            line16, bands = self._reshape_line_from_bytes(pBuffer, nbytes)
            if line16 is None:
                return
            self._bands_in_line = bands
            if BAND_IDXS.max() >= bands:
                return

            rgb16 = line16[:, BAND_IDXS]  # (1024, 3) uint16
            # print (rgb16)
            # enqueue a COPY so we're safe after the SDK returns
            try:
                self.line_queue.put_nowait(rgb16.copy())
            except Exception:
                try:
                    self.line_queue.get_nowait()
                except Empty:
                    pass
                try:
                    self.line_queue.put_nowait(rgb16.copy())
                except Exception:
                    pass

            self._lines_rcvd += 1
        except Exception:
            # never raise out of native callback thread
            return

    def _drain_and_update_plot(self):
        drained = 0
        # write pointer for rolling buffer
        if not hasattr(self, "_write_row"):
            self._write_row = 0

        while True:
            try:
                rgb16 = self.line_queue.get_nowait()
            except Empty:
                break
            rgb8 = self._u16_to_u8(rgb16)  # (1024, 3) uint8
            self.rgb_img[self._write_row, :, :] = rgb8
            self._write_row = (self._write_row + 1) % ROLLING_HEIGHT
            drained += 1

        if drained:
            # rotate so newest line is at the bottom (scroll effect)
            wr = self._write_row
            view = np.vstack((self.rgb_img[wr:], self.rgb_img[:wr]))
            self.im.set_data(view)
            # optional: show stats in window title or a label
            self.ax.set_title(
                f"HSI RGB bands {BAND_IDXS.tolist()} | "
                f"lines: {self._lines_rcvd}  bands_in_line: {self._bands_in_line}  "
                f"q: {self.line_queue.qsize()}"
            )
            self.canvas.draw_idle()

    def closeEvent(self, event):
        # stop UI timer
        try:
            self.timer.stop()
        except Exception:
            pass
        # stop acquisition & close device
        try:
            self.specSensor.command('Acquisition.Stop')
        except Exception:
            pass
        try:
            self.specSensor.close()
        except Exception:
            pass
        super().closeEvent(event)
